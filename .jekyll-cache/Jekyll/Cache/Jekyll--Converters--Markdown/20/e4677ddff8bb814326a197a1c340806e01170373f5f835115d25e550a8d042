I"Ø/<p>While reading about creating forms in Rails, I came across <strong>Nested Forms</strong>. On the first glance it looked difficult, but as I progressed, I said to myself, ‚ÄúIt‚Äôs not so bad!‚Äù.</p>

<p>In order to create Nested Forms, it is important to understand about the helpers provided by Rails.</p>

<p>1). <code class="language-plaintext highlighter-rouge">accepts_nested_attributes_for</code>: Imagine that we have a BookShelf which has many Books. And the Books contain a title and an author. This setup calls for nested attributes.
<br />
<br /></p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">class</span> <span class="nc">BookShelf</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
    <span class="n">has_many</span> <span class="ss">:books</span>
    <span class="n">accepts_nested_attributes_for</span> <span class="ss">:books</span>
  <span class="k">end</span>
</code></pre></div></div>
<p><br /></p>

<p><code class="language-plaintext highlighter-rouge">accepts_nested_attributes_for</code> provides us with <code class="language-plaintext highlighter-rouge">books_attributes=</code> (setter) method. Now, we can set the attributes of model <code class="language-plaintext highlighter-rouge">books</code>, through <code class="language-plaintext highlighter-rouge">bookshelf</code> hash. The params in this case will be.
<br />
<br /></p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">params</span> <span class="o">=</span> <span class="p">{</span>
  <span class="ss">bookshelf: </span><span class="p">{</span>
    <span class="ss">size: </span><span class="s2">"small"</span><span class="p">,</span>
    <span class="ss">books_attributes: </span><span class="p">[</span>
      <span class="p">{</span><span class="ss">title: </span><span class="s2">"Coders at Work"</span><span class="p">,</span> <span class="ss">author: </span><span class="s2">"Peter Seibel"</span><span class="p">},</span>
      <span class="p">{</span><span class="ss">title: </span><span class="s2">"Design Patterns in Ruby"</span><span class="p">,</span> <span class="ss">author: </span><span class="s2">"Russ Olsen"</span><span class="p">},</span>
      <span class="p">{</span><span class="ss">title: </span><span class="s2">"The Pragmatic Programmer"</span><span class="p">,</span> <span class="ss">author: </span><span class="s2">"Andy Hunt"</span><span class="p">}</span>
    <span class="p">]</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<p><br />
<code class="language-plaintext highlighter-rouge">accepts_nested_attributes_for</code> also provides us with some options:</p>
<ul>
  <li>
    <p><code class="language-plaintext highlighter-rouge">reject_if</code>: Helps us to ignore the hashes that fail the criteria or required validations.</p>

    <div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">class</span> <span class="nc">BookShelf</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
    <span class="n">has_many</span> <span class="ss">:books</span>
    <span class="n">accepts_nested_attributes_for</span> <span class="ss">:books</span><span class="p">,</span> <span class="ss">reject_if: </span><span class="nb">proc</span> <span class="p">{</span>
     <span class="o">|</span><span class="n">attribute</span><span class="o">|</span> <span class="n">attribute</span><span class="p">[</span><span class="s1">'title'</span><span class="p">].</span><span class="nf">blank?</span>
    <span class="p">}</span>
  <span class="k">end</span>
</code></pre></div>    </div>
    <p><br /></p>
  </li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">allow_destroy</code>: Allows us to delete the records trough attributes hash.</p>

    <div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="k">class</span> <span class="nc">BookShelf</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
     <span class="n">has_many</span> <span class="ss">:books</span>
     <span class="n">accepts_nested_attributes_for</span> <span class="ss">:books</span><span class="p">,</span> <span class="ss">allow_destroy: </span><span class="kp">true</span>
  <span class="k">end</span>
</code></pre></div>    </div>
    <p><br /></p>
  </li>
</ul>

<p>2). <code class="language-plaintext highlighter-rouge">fields_for</code>: This helper takes two arguments. The first argument is the model for which we want to create the attributes and the second is the object. It allows the methods to be called on builder in order to generate fields.
 <br />
 <br />
 <br /></p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="o">&lt;</span><span class="sx">%= f.fields_for :books, Book.new do |book_attributes| %&gt;
    &lt;%=</span> <span class="n">book_attributes</span><span class="p">.</span><span class="nf">text_field</span> <span class="ss">:title</span> <span class="o">%&gt;</span>
    <span class="o">&lt;</span><span class="sx">%= book_attributes.text_field :author %&gt;
  &lt;% end %&gt;
</span></code></pre></div></div>

<p><br />
 Using these form helpers, we can create nested forms.</p>

<p><strong>Step1.</strong> Add <code class="language-plaintext highlighter-rouge">accepts_nested_attributes_for</code> in the model whose hash will contain the nested attributes.
<br />
<br /></p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">class</span> <span class="nc">BookShelf</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
      <span class="n">has_many</span> <span class="ss">:books</span>
      <span class="n">accepts_nested_attributes_for</span> <span class="ss">:books</span>
    <span class="k">end</span>
</code></pre></div></div>

<p>As stated above, this code will provide us with <code class="language-plaintext highlighter-rouge">books_attributes=</code> method.
<br />
<br />
<strong>Step2.</strong> Update strong parameters in <code class="language-plaintext highlighter-rouge">BookShelf</code> controller so that it accepts the <code class="language-plaintext highlighter-rouge">books_attributes</code>.
<br />
<br /></p>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">class</span> <span class="nc">BookShelvesController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
      <span class="k">def</span> <span class="nf">index</span>
        <span class="vi">@bookshelves</span> <span class="o">=</span> <span class="no">BookShelf</span><span class="p">.</span><span class="nf">all</span>
      <span class="k">end</span>

      <span class="k">def</span> <span class="nf">show</span>
        <span class="vi">@bookshelf</span> <span class="o">=</span> <span class="no">BookShelf</span><span class="p">.</span><span class="nf">find</span><span class="p">(</span><span class="n">params</span><span class="p">[</span><span class="ss">:id</span><span class="p">])</span>
      <span class="k">end</span>

      <span class="k">def</span> <span class="nf">new</span>
        <span class="vi">@bookshelf</span> <span class="o">=</span> <span class="no">BookShelf</span><span class="p">.</span><span class="nf">new</span>
      <span class="k">end</span>

      <span class="k">def</span> <span class="nf">create</span>
        <span class="vi">@bookshelf</span> <span class="o">=</span> <span class="no">BookShelf</span><span class="p">.</span><span class="nf">new</span><span class="p">(</span><span class="n">bookshelf_params</span><span class="p">)</span>
        <span class="k">if</span> <span class="vi">@bookshelf</span><span class="p">.</span><span class="nf">save</span>
          <span class="n">redirect_to</span> <span class="n">bookshelf_path</span><span class="p">(</span><span class="vi">@bookshelf</span><span class="p">)</span>
        <span class="k">else</span>
          <span class="n">render</span> <span class="n">new_bookshelf_path</span>
        <span class="k">end</span>
      <span class="k">end</span>

      <span class="kp">private</span>

      <span class="k">def</span> <span class="nf">bookshelf_params</span>
        <span class="n">params</span><span class="p">.</span><span class="nf">require</span><span class="p">(</span><span class="ss">:bookshelf</span><span class="p">).</span><span class="nf">permit</span><span class="p">(</span><span class="ss">:size</span><span class="p">,</span> <span class="ss">books_attributes: </span><span class="p">[</span><span class="ss">:title</span><span class="p">,</span> <span class="ss">:author</span><span class="p">])</span>
      <span class="k">end</span>
    <span class="k">end</span>
</code></pre></div></div>
<p><br /></p>

<p><strong>Step 3.</strong> Updating the view. In our view, we use <code class="language-plaintext highlighter-rouge">fields_for</code> helper method.
<br />
<br /></p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="nt">&lt;div&gt;</span>
      <span class="nt">&lt;</span><span class="err">%=</span> <span class="na">form_for</span> <span class="na">:bookshelf</span> <span class="na">do</span> <span class="err">|</span><span class="na">f</span><span class="err">|</span> <span class="err">%</span><span class="nt">&gt;</span>
        <span class="nt">&lt;div&gt;</span>
          <span class="nt">&lt;</span><span class="err">%=</span> <span class="na">f.label</span> <span class="na">:size</span> <span class="err">%</span><span class="nt">&gt;</span>
          <span class="nt">&lt;</span><span class="err">%=</span> <span class="na">f.text_field</span> <span class="na">:size</span> <span class="err">%</span><span class="nt">&gt;</span>
        <span class="nt">&lt;div/&gt;</span>
        <span class="nt">&lt;div&gt;</span>
          <span class="nt">&lt;</span><span class="err">%=</span> <span class="na">f.fields_for</span> <span class="na">:books</span><span class="err">,</span> <span class="na">Book.new</span> <span class="na">do</span> <span class="err">|</span><span class="na">book_attributes</span><span class="err">|</span> <span class="err">%</span><span class="nt">&gt;</span>
            <span class="nt">&lt;</span><span class="err">%=</span> <span class="na">book_attributes.label</span> <span class="na">:title</span> <span class="err">%</span><span class="nt">&gt;</span>
            <span class="nt">&lt;</span><span class="err">%=</span> <span class="na">book_attributes.text_field</span> <span class="na">:title</span> <span class="err">%</span><span class="nt">&gt;</span>
            <span class="nt">&lt;br/&gt;</span>
            <span class="nt">&lt;</span><span class="err">%=</span> <span class="na">book_attributes.label</span> <span class="na">:author</span> <span class="err">%</span><span class="nt">&gt;</span>
            <span class="nt">&lt;</span><span class="err">%=</span> <span class="na">book_attributes.text_field</span> <span class="na">:author</span> <span class="err">%</span><span class="nt">&gt;</span>
          <span class="nt">&lt;</span><span class="err">%</span> <span class="na">end</span> <span class="err">%</span><span class="nt">&gt;</span>
        <span class="nt">&lt;div/&gt;</span>
        <span class="nt">&lt;</span><span class="err">%=</span> <span class="na">f.submit</span> <span class="err">%</span><span class="nt">&gt;</span>
      <span class="nt">&lt;</span><span class="err">%</span> <span class="na">end</span> <span class="err">%</span><span class="nt">&gt;</span>
    <span class="nt">&lt;div/&gt;</span>
</code></pre></div></div>

<p>Finally, login to rails server and check the form.</p>
:ET